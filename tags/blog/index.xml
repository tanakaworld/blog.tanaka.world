<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog on For X Developers</title>
    <link>https://blog.tanaka.world/tags/blog/</link>
    <description>Recent content in blog on For X Developers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 18 Jan 2021 21:35:10 +0900</lastBuildDate><atom:link href="https://blog.tanaka.world/tags/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hexo から Hugo に移行した</title>
      <link>https://blog.tanaka.world/migrate-from-hexo-to-hugo/</link>
      <pubDate>Mon, 18 Jan 2021 21:35:10 +0900</pubDate>
      
      <guid>https://blog.tanaka.world/migrate-from-hexo-to-hugo/</guid>
      <description>ブログツールを Hugo に引っ越しをした。(前回: Middleman から Hexo に引っ越した)
モチベーション  Hexo のジェネレート処理が重くなってきた ダークモード対応 多言語対応 (英語でも書くために) 飽きた  2.,3. は hexo でできたかもしれないが、4.もあり別のツールを調べていた。Hugo でいい感じのテンプレートがあったのでそれにした。正直あまり考えずに即決した。
移行時に変更が必要だった箇所 本文の Markdown ファイルはほぼそのまま使用できたが、一部変更を加えた。
ディレクトリ構成  Markdown ファイルの移動 (source -&amp;gt; content/posts) 画像パスの変更  Front Matter  tags 要素のインデントを削除 slug を追加  Hexo では Markdown ファイル名の先頭に yyyy-MM-dd-&amp;lt;path名&amp;gt;.md というファイル名にすると path 名が実際の path になっていた Hugo ではデフォルトで「ファイル名」または Front Matter の slug が path 名になる ファイル名から slug を自動挿入するようにした(雑な gist)    </description>
    </item>
    
    <item>
      <title>Middleman から Hexo に引っ越した</title>
      <link>https://blog.tanaka.world/move-to-hexo-from-middleman/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tanaka.world/move-to-hexo-from-middleman/</guid>
      <description>ブログフレームワークを Hexo に Middleman から Hexo に移行した． はてなダイアリー &amp;gt; WordPress (さくらレンタルサーバ) &amp;gt; Middleman (GitHub Pages) と渡ってきて Hexo は第４世代となる．
個人で作っているものは，技術的な検証をしたり遊んだりする場所にしたいと思っている． HUGO とかも選択肢にあったが，最近は Node 環境で開発していることが多く，色々カスタマイズしたい性分の自分にとっては Node の方がよかった．
ドメインを blog.tanaka.world に http://yutarotanaka.com/blog で運用していたブログを廃止した． ドメインはなにかに使うかもしれないので，一応残しておく．
現在は全コンテンツを移行し，全部 404ページにしている． GitHub Pages はルートに 404.html を置くことで，GitHub デフォルトの 404 ページをカスタマイズできるようになっている．
➡️ Creating a custom 404 page for your GitHub Pages site
ちなみに，杉並区議員に同姓同名の議員さんがいるらしく時々間違われていた（笑）．昔は http://tanakayutaro.com/だった気がするので，あちらも引っ越しされたのか．
GitHub Pages でサブドメインを設定 ホスティングは引き続き GitHub Pages にしている．昔はできなかったが，現在は SSL 対応も可能になっている．tanaka.world の方は， Vue.js + Nuxt.js + Firebase (Hosting/CloudFunctions) でホスティングしていて，ブログはそこに混ぜたくなかった．別プロジェクトで運用するべくサブドメインにした．</description>
    </item>
    
  </channel>
</rss>
